{
  "91": "SELECT IIF(AVG(a12) > AVG(a13), '1995', '1996') FROM district",
  "96": "SELECT COUNT(*) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.type = 'OWNER'",
  "101": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.date) = '1995' ORDER BY T2.date LIMIT 1",
  "108": "SELECT T4.amount FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id INNER JOIN account AS T3 ON T1.client_id = T3.account_id INNER JOIN trans AS T4 ON T1.client_id = T4.account_id WHERE T2.amount = ( SELECT MAX(amount) FROM loan ) ORDER BY T4.date ASC LIMIT 1",
  "117": "SELECT CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100 / SUM(amount) FROM loan",
  "128": "SELECT T2.a2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.a2 ORDER BY COUNT(*) DESC LIMIT 10",
  "136": "SELECT COUNT(t1.loan_id) FROM loan AS t1 INNER JOIN account AS t2 ON t1.account_id = t2.account_id WHERE t1.amount >= 250000 AND t2.frequency = 'POPLATEK MESICNE' AND t1.date BETWEEN '1995-01-01' AND '1997-12-31'",
  "149": "SELECT DISTINCT type, a11 FROM disp INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON account.district_id = district.district_id WHERE disp.account_id NOT IN (SELECT account_id FROM loan) AND district.a11 > 8000 AND district.a11 <= 9000",
  "169": "SELECT ( CAST(( SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M' AND strftime('%Y', T2.date) = '1997' ) - ( SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M' AND strftime('%Y', T2.date) = '1996' ) AS REAL) / ( SELECT SUM(T2.amount) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M' AND strftime('%Y', T2.date) = '1996' ) ) * 100 AS \"Growth Rate\" FROM client",
  "173": "SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.amount = 3539",
  "393": "SELECT COUNT(*) FROM cards WHERE artist ='John Avon' AND cardkingdomid IS NOT NULL AND cardkingdomfoilid IS NOT NULL AND power IS NULL",
  "394": "SELECT COUNT(id) FROM cards WHERE bordercolor = 'white' AND cardkingdomfoilid = cardKingdomId AND cardKingdomId IS NOT NULL",
  "406": "SELECT T2.id FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Legal' AND T2.types = 'Creature'",
  "411": "SELECT artist FROM cards WHERE uuid IN (SELECT uuid FROM foreign_data WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation')",
  "427": "SELECT language FROM set_translations WHERE setcode = 'ARC' AND setcode IN ( SELECT code FROM sets WHERE mcmname = 'Archenemy' )",
  "432": "SELECT T1.setCode FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Russian' ORDER BY T2.baseSetSize DESC LIMIT 1",
  "434": "SELECT COUNT(DISTINCT T1.setcode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T1.language = 'Japanese' AND (T2.mtgocode IS NULL OR T2.mtgocode = '')",
  "477": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND T2.name = 'Coldsnap'",
  "507": "SELECT CAST(SUM(CASE WHEN cards.isonlineonly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN set_translations ON cards.setcode = set_translations.setcode WHERE foreign_data.language = 'Portuguese (Brazil)'",
  "513": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalsetsize DESC LIMIT 1",
  "547": "SELECT COUNT(T1.id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.owneruserid = T2.id WHERE T2.age > 65 AND T1.score >= 20",
  "550": "SELECT P1.body FROM tags AS T1 INNER JOIN posts AS P1 ON T1.excerptpostid = P1.id ORDER BY T1.count DESC LIMIT 1",
  "556": "SELECT CAST(COUNT(T2.id) AS REAL) / COUNT(DISTINCT T1.displayname) FROM users AS T1 INNER JOIN badges AS T2 ON T1.id = T2.userid WHERE T1.views > 200",
  "558": "SELECT COUNT(id) FROM votes WHERE userid = 58 AND creationdate = '2010-07-19'",
  "572": "SELECT viewcount FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
  "578": "SELECT T1.displayname, T1.reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.id = T2.owneruserid WHERE T2.title = 'Understanding what Dassault iSight is doing?'",
  "587": "SELECT AVG(p.viewcount), p.title, c.text, p.score FROM posts AS p INNER JOIN tags AS t ON p.id = t.excerptpostid INNER JOIN comments AS c ON p.id = c.postid WHERE t.tagname = 'humor'",
  "598": "SELECT 100.0 * (SUM(CASE WHEN strftime('%Y', date) = '2010' AND name = 'Student' THEN 1 ELSE 0 END) / (SELECT COUNT(*) FROM badges)) - 100.0 * (SUM(CASE WHEN strftime('%Y', date) = '2011' AND name = 'Student' THEN 1 ELSE 0 END) / (SELECT COUNT(*) FROM badges)) AS percentage_difference FROM badges",
  "639": "SELECT CAST(SUM(CASE WHEN T1.tagname = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.id = T2.id INNER JOIN users AS T3 ON T2.owneruserid = T3.id WHERE T3.displayname = 'Community'",
  "701": "SELECT CAST(SUM(CASE WHEN T2.score >= 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.id = T2.owneruserid WHERE T1.id = (SELECT id FROM users ORDER BY reputation DESC LIMIT 1)",
  "789": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien';",
  "793": "SELECT COUNT(*) FROM superhero JOIN race ON superhero.race_id = race.id JOIN gender ON superhero.gender_id = gender.id WHERE race.race = 'god/eternal' AND gender.gender = 'Male'",
  "795": "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3",
  "806": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'",
  "814": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value = 100",
  "817": "SELECT race.race FROM race INNER JOIN superhero ON race.id = superhero.race_id INNER JOIN colour ON superhero.hair_colour_id = colour.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE colour.colour = 'blue' AND gender.gender = 'male'",
  "823": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics'",
  "829": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference",
  "834": "SELECT CAST(SUM(CASE WHEN T3.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.gender) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'",
  "835": "SELECT CAST(SUM(CASE WHEN T2.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics'",
  "1470": "SELECT COUNT(DISTINCT gasstationid) FROM gasstations WHERE country = 'CZE' AND segment = 'Premium'",
  "1476": "SELECT (SELECT SUM(consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.customerid = T2.customerid WHERE T1.date BETWEEN '201201' AND '201212' AND T2.currency = 'CZK') - (SELECT SUM(consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.customerid = T2.customerid WHERE T1.date BETWEEN '201201' AND '201212' AND T2.currency = 'EUR') AS ConsumptionDifference",
  "1477": "SELECT STRFTIME('%Y', T3.date) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid INNER JOIN transactions_1k AS T3 ON T2.customerid = T3.customerid WHERE T1.currency = 'EUR' GROUP BY STRFTIME('%Y', T3.date) ORDER BY SUM(T2.consumption) DESC LIMIT 1",
  "1478": "SELECT segment FROM customers JOIN yearmonth ON customers.customerid = yearmonth.customerid GROUP BY segment ORDER BY SUM(consumption) ASC LIMIT 1",
  "1486": "SELECT (SELECT COUNT(customerid) FROM customers WHERE currency = 'Czech koruna' AND segment = 'SME') - (SELECT COUNT(customerid) FROM customers WHERE currency = 'Euro' AND segment = 'SME') AS amount_of_more_SMEs",
  "1490": "SELECT CAST(SUM(CASE WHEN y.consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(y.consumption) AS percentage FROM yearmonth AS y INNER JOIN customers AS c ON y.customerid = c.customerid WHERE c.segment = 'LAM'",
  "1501": "SELECT DISTINCT T2.country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.gasstationid = T2.gasstationid WHERE SUBSTR(T1.date, 1, 6) = '201306';",
  "1516": "SELECT COUNT(T2.transactionid) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid WHERE T1.currency = 'EUR' AND T2.date = '2012-08-26' AND T2.time < '13:00:00'",
  "1526": "SELECT 100.0 * (SUM(CASE WHEN strftime('%Y', T2.`date`) = '2012' THEN T2.consumption ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.`date`) = '2013' THEN T2.consumption ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', T2.`date`) = '2012' THEN T2.consumption ELSE 0 END) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE strftime('%Y-%m-%d', T1.`date`) = '2012-08-25' AND T1.amount = 634.8",
  "1531": "SELECT T1.customerid, AVG(T2.price / T2.amount) as average_price, T1.currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid GROUP BY T1.customerid ORDER BY SUM(T2.price) DESC LIMIT 1"
}