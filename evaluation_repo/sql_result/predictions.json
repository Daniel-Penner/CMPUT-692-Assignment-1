{
  "91": "SELECT CASE WHEN AVG(district.A6)>AVG(district.A7) THEN '1995' WHEN AVG(district.A6)<AVG(district.A7) THEN '1996' ELSE 'tie' END AS higher_year, AVG(district.A6) AS avg_1995, AVG(district.A7) AS avg_1996 FROM district",
  "96": "SELECT COUNT(DISTINCT disp.client_id) FROM disp JOIN account ON disp.account_id = account.account_id WHERE UPPER(disp.type) = 'OWNER' AND UPPER(account.frequency) LIKE '%WEEK%';",
  "101": "SELECT DISTINCT account.account_id FROM account JOIN trans ON account.account_id = trans.account_id WHERE substr(trans.date,1,4)='1995' AND trans.date = (SELECT MIN(date) FROM trans WHERE substr(date,1,4)='1995');",
  "108": "SELECT t.amount FROM trans t JOIN account a ON t.account_id=a.account_id JOIN loan l ON l.account_id=a.account_id WHERE l.amount=(SELECT MAX(amount) FROM loan) AND t.date>=a.date ORDER BY t.date LIMIT 1;",
  "117": "SELECT COALESCE(100.0 * SUM(CASE WHEN loan.status = 'closed' THEN loan.amount ELSE 0 END) / NULLIF(SUM(loan.amount),0), 0) FROM loan;",
  "128": "SELECT district.A2, COUNT(DISTINCT client.client_id) AS cnt FROM client JOIN disp ON client.client_id=disp.client_id JOIN account ON disp.account_id=account.account_id JOIN district ON account.district_id=district.district_id WHERE client.gender='F' AND disp.type='OWNER' GROUP BY district.A2 ORDER BY cnt DESC LIMIT 9;",
  "136": "SELECT loan.account_id, COUNT(*) FROM loan JOIN account ON loan.account_id=account.account_id WHERE loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND loan.amount>=250000 AND account.frequency='M' AND loan.status='approved' GROUP BY loan.account_id;",
  "149": "SELECT DISTINCT account.frequency FROM account JOIN district ON account.district_id = district.district_id WHERE district.A11>8000 AND district.A11<=9000 AND account.account_id NOT IN (SELECT account_id FROM loan)",
  "169": "SELECT CASE WHEN t.s1996=0 THEN NULL ELSE (t.s1997 - t.s1996)*1.0 / t.s1996 END AS growth FROM (SELECT SUM(CASE WHEN strftime('%Y',loan.date)='1996' THEN loan.amount ELSE 0 END) AS s1996, SUM(CASE WHEN strftime('%Y',loan.date)='1997' THEN loan.amount ELSE 0 END) AS s1997 FROM loan JOIN disp ON loan.account_id=disp.account_id JOIN client ON disp.client_id=client.client_id WHERE client.gender='M') t",
  "173": "SELECT account.frequency, (SELECT trans.k_symbol FROM trans WHERE trans.account_id=3 AND trans.type='Debit' GROUP BY trans.k_symbol HAVING SUM(trans.amount)=3539) FROM account WHERE account.account_id=3;",
  "393": "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND hasFoil = 0;",
  "394": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND CAST(power AS INTEGER) >= 5;",
  "406": "SELECT DISTINCT cards.id FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.type LIKE '%Creature%';",
  "411": "SELECT cards.artist FROM cards WHERE cards.text = 'Das perfekte Gegenmittel zu einer dichten Formation';",
  "427": "SELECT DISTINCT language FROM set_translations WHERE setCode = 'ARC';",
  "432": "SELECT sets.name FROM sets JOIN set_translations ON set_translations.setCode = sets.code WHERE set_translations.language = 'Russian' ORDER BY sets.totalSetSize DESC LIMIT 1;",
  "434": "SELECT COUNT(*) FROM sets s WHERE s.isOnlineOnly = 0 AND EXISTS (SELECT 1 FROM set_translations st WHERE st.setCode = s.code AND st.language = 'Japanese') AND NOT EXISTS (SELECT 1 FROM set_translations st2 WHERE st2.setCode = s.code AND st2.language != 'Japanese');",
  "477": "SELECT DISTINCT cards.artist FROM cards JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Coldsnap' AND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');",
  "507": "SELECT 100.0 * SUM(isOnlineOnly) / COUNT(*) AS percentage FROM (SELECT DISTINCT sets.code, sets.isOnlineOnly FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Portuguese (Brazil)');",
  "513": "SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalSetSize DESC LIMIT 1;",
  "547": "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age >= 60 AND posts.Score > 19;",
  "550": "SELECT posts.Body FROM posts JOIN tags ON tags.ExcerptPostId = posts.Id ORDER BY tags.Count DESC LIMIT 1;",
  "556": "SELECT AVG(badge_count) FROM (SELECT users.Id, COUNT(badges.Id) AS badge_count FROM users LEFT JOIN badges ON users.Id = badges.UserId WHERE users.Views > 200 GROUP BY users.Id);",
  "558": "SELECT COUNT(*) FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.OwnerUserId = 58 AND date(votes.CreationDate) = '2010-07-19';",
  "572": "SELECT posts.ViewCount FROM posts WHERE posts.Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';",
  "578": "SELECT users.DisplayName, users.Reputation FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Understanding what Dassault iSight is doing?';",
  "587": "SELECT (SELECT AVG(ViewCount) FROM posts WHERE Tags LIKE '%<humor>%') AS AvgViewCount, posts.Title, comments.Text FROM posts LEFT JOIN comments ON comments.PostId = posts.Id WHERE posts.Tags LIKE '%<humor>%';",
  "598": "SELECT CASE WHEN c0=0 THEN NULL ELSE (c1 - c0) * 100.0 / c0 END AS percentage_difference FROM (SELECT SUM(CASE WHEN Name='student' AND strftime('%Y',Date)='2010' THEN 1 ELSE 0 END) AS c0, SUM(CASE WHEN Name='student' AND strftime('%Y',Date)='2011' THEN 1 ELSE 0 END) AS c1 FROM badges);",
  "639": "SELECT 100.0 * SUM(CASE WHEN posts.Tags LIKE '%<r>%' THEN 1 ELSE 0 END) / COUNT(*) AS percentage FROM posts WHERE posts.OwnerDisplayName = 'Community';",
  "701": "SELECT 100.0 * SUM(CASE WHEN posts.Score > 50 THEN 1 ELSE 0 END) / NULLIF(COUNT(*),0) AS percentage FROM posts WHERE posts.OwnerUserId = (SELECT users.Id FROM users ORDER BY users.Reputation DESC LIMIT 1);",
  "789": "SELECT AVG(superhero.weight_kg) FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Alien';",
  "793": "SELECT COUNT(*) FROM superhero JOIN race ON superhero.race_id = race.id JOIN gender ON superhero.gender_id = gender.id WHERE race.race = 'god/eternal' AND gender.gender = 'male';",
  "795": "SELECT COUNT(*) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE lower(alignment.alignment) = 'neutral';",
  "806": "SELECT colour.colour FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan';",
  "814": "SELECT DISTINCT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN colour ON superhero.skin_colour_id = colour.id WHERE hero_attribute.attribute_value = 100;",
  "817": "SELECT race.race FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.hair_colour_id = colour.id JOIN race ON superhero.race_id = race.id WHERE gender.gender = 'Male' AND colour.colour = 'Blue';",
  "823": "SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics';",
  "829": "SELECT CASE WHEN dc_count>marvel_count THEN 'DC' WHEN dc_count<marvel_count THEN 'Marvel Comics' ELSE 'Tie' END AS publisher, abs(dc_count-marvel_count) AS difference FROM (SELECT (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id=p.id WHERE p.publisher_name='DC') AS dc_count, (SELECT COUNT(*) FROM superhero s2 JOIN publisher p2 ON s2.publisher_id=p2.id WHERE p2.publisher_name='Marvel Comics') AS marvel_count);",
  "834": "SELECT 100.0 * SUM(CASE WHEN gender.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id LEFT JOIN gender ON superhero.gender_id = gender.id WHERE publisher.publisher_name = 'George Lucas';",
  "835": "SELECT AVG(CASE WHEN alignment.alignment='good' THEN 1.0 ELSE 0 END)*100 AS percentage FROM superhero JOIN publisher ON superhero.publisher_id=publisher.id LEFT JOIN alignment ON superhero.alignment_id=alignment.id WHERE publisher.publisher_name='Marvel Comics';",
  "1470": "SELECT COUNT(DISTINCT gasstations.GasStationID) FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID JOIN products ON transactions_1k.ProductID = products.ProductID WHERE gasstations.Country = 'CZE' AND products.Description = 'Premium'",
  "1476": "SELECT SUM(CASE WHEN customers.Currency='CZK' THEN yearmonth.Consumption ELSE 0 END)-SUM(CASE WHEN customers.Currency='EUR' THEN yearmonth.Consumption ELSE 0 END) AS difference FROM yearmonth JOIN customers ON yearmonth.CustomerID=customers.CustomerID WHERE yearmonth.Date LIKE '2012%';",
  "1477": "SELECT strftime('%Y', transactions_1k.Date) AS Year FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' GROUP BY Year ORDER BY SUM(transactions_1k.Amount) DESC LIMIT 1;",
  "1478": "SELECT customers.Segment FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID GROUP BY customers.Segment ORDER BY SUM(yearmonth.Consumption) ASC LIMIT 1;",
  "1486": "SELECT CASE WHEN SUM(CASE WHEN Currency='Czech koruna' THEN 1 ELSE 0 END) > SUM(CASE WHEN Currency='euro' THEN 1 ELSE 0 END) THEN 'true' ELSE 'false' END AS more_czech, SUM(CASE WHEN Currency='Czech koruna' THEN 1 ELSE 0 END) - SUM(CASE WHEN Currency='euro' THEN 1 ELSE 0 END) AS difference FROM customers WHERE Segment='SME';",
  "1490": "SELECT (SELECT COUNT(DISTINCT yearmonth.CustomerID) FROM yearmonth JOIN customers ON yearmonth.CustomerID=customers.CustomerID WHERE customers.Segment='LAM' AND yearmonth.Consumption>46.73)*100.0/(SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment='LAM');",
  "1501": "SELECT DISTINCT gasstations.Country FROM gasstations JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE transactions_1k.Date LIKE '2013-06%';",
  "1516": "SELECT COUNT(*) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' AND transactions_1k.Date = '2012/8/26' AND transactions_1k.Time < '12:00:00';",
  "1526": "SELECT (t.m2012 - t.m2013) / t.m2012 AS decrease_rate FROM (SELECT MAX(CASE WHEN Date='2012' THEN Consumption END) AS m2012, MAX(CASE WHEN Date='2013' THEN Consumption END) AS m2013 FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date='2012/8/25' AND Amount = 634.8 LIMIT 1)) AS t;",
  "1531": "SELECT customers.CustomerID, SUM(transactions_1k.Price) AS total_spent, SUM(transactions_1k.Price)/SUM(transactions_1k.Amount) AS avg_price_per_item, customers.Currency FROM transactions_1k JOIN customers ON transactions_1k.CustomerID=customers.CustomerID GROUP BY customers.CustomerID, customers.Currency ORDER BY total_spent DESC LIMIT 1;"
}